$(document).ready(function(){function i(i,r,e,t){e="undefined"!=typeof e?e:"#2980b9",t="undefined"!=typeof t?t:"";for(var a=0;a<l.length;a++)clearTimeout(l[a]);l=[],d.html(i).css("background",e).removeClass("grids-notification--slide-off-right").addClass("grids-notification--show").attr("data-hook",t),l.push(setTimeout(function(){d.addClass("grids-notification--slide-off-right"),l.push(setTimeout(function(){d.removeClass("grids-notification--show grids-notification--slide-off-right").attr("data-hook","")},300))},r))}function r(){var i=$(document).height()>$(window).height();if(i){var r=jQuery('<div style="width: 100%; height:200px;">test</div>'),e=jQuery('<div style="width:200px;height:150px; position: absolute; top: 0; left: 0; visibility: hidden; overflow:hidden;"></div>').append(r),t=r[0],a=e[0];jQuery("body").append(a);var s=t.offsetWidth;e.css("overflow","scroll");var n=a.clientWidth;return e.remove(),s-n}return 0}function e(){var i=parseInt($(".grid").last().css("padding-left"));return i}function t(){var i={XXL:parseInt($(".marker.marker--xxl").css("margin-left")),XL:parseInt($(".marker.marker--xl").css("margin-left")),L:parseInt($(".marker.marker--l").css("margin-left")),M:parseInt($(".marker.marker--m").css("margin-left")),S:parseInt($(".marker.marker--s").css("margin-left")),XS:parseInt($(".marker.marker--xs").css("margin-left")),XXS:parseInt($(".marker.marker--xxs").css("margin-left")),Stack:parseInt($(".marker.marker--stack").css("margin-left"))};return i}function a(){var i=$(".grid"),r=$("#gridsCurrentBreakpoint").width();if(m=Math.max(document.documentElement.clientWidth,window.innerWidth||0),i.find("[class*=col-]").each(function(){var i=$(this).attr("class");if(i.match(/col\-[0-9]{1,2}/)){var r=i.match(/col\-([0-9]{1,2})/,"$1");s(this,r[1])}}),r>0){var e;for(var t in k)if(e=t.toLowerCase(),i.find("[class*=col-"+e+"-]").each(function(){var i=$(this).attr("class"),r="col\\-"+e+"\\-[0-9]{1,2}";if(i.match(r)){r="col\\-"+e+"\\-([0-9]{1,2})";var t=i.match(r,"$1");s(this,t[1])}}),k[t]==r)break}for(var t in k){var e=t.toLowerCase();i.find("[class*=col-]").each(function(){var i=!1,r=$(this).attr("class");r=r.replace("-margin",""),"stack"==e&&(r=r.replace("-nostack","-stack")),r=r.split(" ");for(var a in r)r[a].indexOf("-"+e)>-1&&(i=!0);i&&$(this).find(".innerMarker-"+e).each(function(){var i=$(this).css("border-right-color");$(this).addClass("innerMarker--dotted").css({"border-right-width":"3px","border-right-style":"dotted"}).attr({"data-bp-name":e,"data-bp-value":k[t],"data-bp-color":i})})})}}function s(i,r){var e,t,a,s,n,o,d,l="1px",c="solid",g="dashed";e=(k.XXL-h-v)*(r/12)-h,t=(k.XL-h-v)*(r/12)-h,a=(k.L-h-v)*(r/12)-h,s=(k.M-h-v)*(r/12)-h,n=(k.S-h-v)*(r/12)-h,o=(k.XS-h-v)*(r/12)-h,d=(k.XXS-h-v)*(r/12)-h,leftStack=(k.Stack-h-v)*(r/12)-h;var f=$(i).width(),m=$(i).height(),p=$(i).find(".innerMarkers");p.find(".innerMarker-outline").css({width:f,height:m}),p.find(".innerMarker-default").css({"margin-left":"0px","border-right-width":"2px","border-right-style":"solid",height:m}),p.find(".innerMarker-xxl").css({"margin-left":e,"border-right-width":l,"border-right-style":c,height:m}),p.find(".innerMarker-xl").css({"margin-left":t,"border-right-width":l,"border-right-style":c,height:m}),p.find(".innerMarker-l").css({"margin-left":a,"border-right-width":l,"border-right-style":c,height:m}),p.find(".innerMarker-m").css({"margin-left":s,"border-right-width":l,"border-right-style":c,height:m}),p.find(".innerMarker-s").css({"margin-left":n,"border-right-width":l,"border-right-style":c,height:m}),p.find(".innerMarker-xs").css({"margin-left":o,"border-right-width":l,"border-right-style":c,height:m}),p.find(".innerMarker-xxs").css({"margin-left":d,"border-right-width":l,"border-right-style":c,height:m}),p.find(".innerMarker-stack").css({"margin-left":leftStack,"border-right-width":l,"border-right-style":g,height:m})}function n(i,r){$(i).html(r)}jQuery.expr[":"].regex=function(i,r,e){var t=e[3].split(","),a=/^(data|css):/,s={method:t[0].match(a)?t[0].split(":")[0]:"attr",property:t.shift().replace(a,"")},n="ig",o=new RegExp(t.join("").replace(/^\s+|\s+$/g,""),n);return o.test(jQuery(i)[s.method](s.property))};var o='<div id="gridsNotification" class="grids-notification"></div>';$("body").append(o);var d=$("#gridsNotification"),l=[];$("#gridsNotification").on("click",function(){d.removeClass("grids-notification--show grids-notification--slide-off-right").attr("data-hook","")});var c=' <!-- 	******************************************************************* 	** Helper Markup - Gridline/Breakpoint Marker Overlay & Controls ** 	******************************************************************* --> <!-- gridlines --> <div class="gridlines"> 	<div class="grid"> 		<div class="col-1 col-nostack"><div class="gridlines--col">1</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">2</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">3</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">4</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">5</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">6</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">7</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">8</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">9</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">10</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">11</div></div> 		<div class="col-1 col-nostack"><div class="gridlines--col">12</div></div> 	</div> </div> <!-- markers for grid --> <div class="markers"> 	<div class="grid"> 		<div class="marker marker--xxl"></div> 		<div class="marker marker--xl"></div> 		<div class="marker marker--l"></div> 		<div class="marker marker--m"></div> 		<div class="marker marker--s"></div> 		<div class="marker marker--xs"></div> 		<div class="marker marker--xxs"></div> 		<div class="marker marker--stack"></div> 	</div> </div> <!-- current grid position --> <div id="gridsCurrentGridPosition" class="grid" style="visibility:hidden;"></div> <!-- current breakpoint --> <div id="gridsCurrentBreakpoint"></div> <!-- marker indicator --> <div class="marker-indicator"></div> <!-- gridlines toggle --> <div class="gridlines-toggle">gridlines</div> <!-- markers toggle --> <div class="markers-toggle">markers</div>	<!-- col markers toggle --> <div class="col-markers-toggle">col-markers</div>	<!-- ******************************************************************* -->  ';$("body").append(c),$(".gridlines-toggle").on("click",function(){$(".gridlines").toggle(),$(".gridlines-toggle").toggleClass("toggle-button--active")}),$(".gridlines").toggle(),$(".markers-toggle").on("click",function(){var r=Math.max(document.documentElement.clientWidth,window.innerWidth||0),e=parseInt($(".marker.marker--stack").css("margin-left"));r>e?($(".markers").toggle(),$(".markers-toggle").toggleClass("toggle-button--active"),$("body").toggleClass("show-marker-outlines")):i('Breakpoint "marker" overlays are only available for browser widths greater than the "stack" breakpoint ('+e+"px).  Increase the size of your browser to enable this.",8e3)}),$(".markers .marker").on("click",function(){var r=$(this).css("margin-left"),e=$(this).css("background-color");i('clicked breakpoint is at: <span class="grids-notification--keyword">'+r+'</span><br><br>Breakpoint "markers" overlay a visual line on the page, showing each "breapoint" value defined in your GRIDS configuration.',8e3,e)}),$(".marker-indicator").on("click",function(){i('The breakpoint indicator bar on the bottom of the page displays the current "breakpoint" that is trigged in the GRIDS framework.',8e3)}),$(".markers").toggle();var g=' <div class="innerMarkers"> 	<div class="innerMarker-outline"></div> 	<div class="innerMarker-default"></div> 	<div class="innerMarker-stack"></div> 	<div class="innerMarker-xxs"></div> 	<div class="innerMarker-xs"></div> 	<div class="innerMarker-s"></div> 	<div class="innerMarker-m"></div> 	<div class="innerMarker-l"></div> 	<div class="innerMarker-xl"></div> 	<div class="innerMarker-xxl"></div> </div> ';$(".col-markers-toggle").on("click",function(){var r=Math.max(document.documentElement.clientWidth,window.innerWidth||0),e=parseInt($(".marker.marker--stack").css("margin-left"));r>e?($(".innerMarkers").toggle(),$(".col-markers-toggle").toggleClass("toggle-button--active")):i('"Column Markers" are only available for browser widths greater than the "stack" breakpoint ('+e+"px).  Increase the size of your browser to enable this.",8e3)}),$(":regex(class,col\\-[0-9])").on("click",function(){var r=$(this).parents(".gridlines").length>0;if(r)i('The gridlines overlay is active, to toggle them off click the "gridlines" button in the bottom left corner.',6e3);else{var e=$(".col-markers-toggle.toggle-button--active").length>0,t=$("#gridsCurrentGridPosition").position().left,s=$(this).parent(".grid").position().left,n=s===t;if(e){var o=$(this).parents(".grid").length>1;if(!o)if(n){var d=$(this).find(".innerMarkers").length>0;d?$(this).find(".innerMarkers").remove():($(this).prepend(g),a())}else i('Can not show column markers for this element because its "grid" row width is not the same as your configured GRIDS width.  This is usual due to nesing a grid inside of an element that has left or right padding/margin.  If extra padding or margin is needed it is advised to do this within the colum where your content resides and not outside of the grid row itself.',4e4,"#c0392b")}}});var v=r(),h=e(),k=t();$(window).resize(function(){clearTimeout(this.id),this.id=setTimeout(a,300)}),$("body").on("mouseenter",".innerMarker--dotted, .innerMarker-default",function(){var r=$(this).parent().parent().attr("class");if($(this).hasClass("innerMarker-default")){var e=/col-[0-9]{1,2}|col-push-[0-9]{1,2}|col-(margin|padding)-(top|bottom)-{0,1}(2x|3x)|col-(margin|padding)-(top|bottom)(?!-)/g,t=r.match(e),a="",s="Default",n=$(this).css("border-right-color");for(var o in t)a=a+'<div class="grids-notification--modifier">'+t[o]+"</div>";var d='<div class="grids-notification--title">Default Column Properties</div>Breakpoint: <span class="grids-notification--keyword">None</span><br>Default classes: '+a}else{$(this).hasClass("innerMarker-s")&&(r=r.replace("-nostack","")),$(this).hasClass("innerMarker-stack")&&(r=r.replace("-nostack","-stack"));var t=r.split(" "),a="",s=$(this).attr("data-bp-name"),l=$(this).attr("data-bp-value"),n=$(this).attr("data-bp-color");for(var o in t)t[o].indexOf("-"+s)>-1&&(a=a+'<div class="grids-notification--modifier">'+t[o].replace("-stack","-nostack")+"</div>");var d='<div class="grids-notification--title">Column Breakpoint Modifier(s)</div>Breakpoint: <span class="grids-notification--keyword">'+s.toUpperCase()+" ("+l+"px)</span><br>Breakpoint classes: "+a}i(d,7e3,n,"innerMarkerModifier")}),$("body").on("mouseleave",".innerMarker--dotted, .innerMarker-default",function(){var i=d.attr("data-hook");i&&d.removeClass("grids-notification--show grids-notification--slide-off-right").attr("data-hook","")});var f='<div id="viewportDisplay" class="viewportDisplay"></div>';$("body").append(f);var m=Math.max(document.documentElement.clientWidth,window.innerWidth||0);n("#viewportDisplay","vp: "+m+"px"),$("#viewportDisplay").on("click",function(){i('The viewport helper in the top left corner displays the current "viewport" of your browser window.',6e3)}),$(window).on("resize",function(){m=Math.max(document.documentElement.clientWidth,window.innerWidth||0),n("#viewportDisplay","vp: "+m+"px")})});